#include <systemc>
#include <uvm>
#include <scv.h>
#include "verilated.h"
#include "Vwrap_{{uvm.dut.name}}.h"

#include "env.hpp"
#include "fc4sc.hpp"

int sc_main(int argc, char **argv) {
  Verilated::commandArgs(argc, argv);

  scv_random::set_global_seed(100);

  int verbosity = uvm::UVM_MEDIUM;
  uvm::uvm_config_db<int>::set(NULL, "*", "recording_detail", uvm::UVM_LOW);
  uvm::uvm_config_db<int>::set(NULL, "*", "verbosity_level", verbosity);
  uvm::uvm_set_verbosity_level(verbosity);


  env<Vwrap_{{uvm.dut.name}}> *my_env = new env<Vwrap_{{uvm.dut.name}}>("env", "{{uvm.dut.name}}", "trace.vcd");


  uvm::uvm_default_printer->knobs.reference = 0;

  uvm::uvm_root::get()->print_topology();

  uvm::run_test();

  fc4sc::global::coverage_save("coverage_results.xml");
  delete my_env;

  return 0;
}
